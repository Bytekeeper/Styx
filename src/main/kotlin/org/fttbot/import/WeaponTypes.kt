package org.fttbot.import
import bwapi.*
class FWeaponType(val source : WeaponType, val name : String, val targetsOwn : Boolean, val targetsOrgOrMech : Boolean, val damageAmount : Int, private val l_upgradeType : Lazy<FUpgradeType>, val damageCooldown : Int, val targetsOrganic : Boolean, val damageFactor : Int, val damageType : DamageType, val explosionType : ExplosionType, val targetsAir : Boolean, val damageBonus : Int, val targetsTerrain : Boolean, val targetsGround : Boolean, val maxRange : Int, private val l_getTech : Lazy<FTechType>, private val l_whatUses : Lazy<FUnitType>, val minRange : Int, val medianSplashRadius : Int, val targetsMechanical : Boolean, val outerSplashRadius : Int, val innerSplashRadius : Int, val targetsNonBuilding : Boolean, val targetsNonRobotic : Boolean) {
   init {
      FWeaponType.instances[source] = this
   }
   val upgradeType : FUpgradeType by l_upgradeType
   val getTech : FTechType by l_getTech
   val whatUses : FUnitType by l_whatUses
   override fun toString() = name

   companion object {
      internal val instances = HashMap<WeaponType, FWeaponType>()
      fun of(src : WeaponType) : FWeaponType = instances[src]!!
      val Gauss_Rifle : FWeaponType = FWeaponType(source = WeaponType.Gauss_Rifle, name = "Gauss_Rifle", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 6, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Terran_Infantry_Weapons}, damageCooldown = 15, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = true, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 128, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Terran_Marine}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Gauss_Rifle_Jim_Raynor : FWeaponType = FWeaponType(source = WeaponType.Gauss_Rifle_Jim_Raynor, name = "Gauss_Rifle_Jim_Raynor", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 18, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Terran_Infantry_Weapons}, damageCooldown = 15, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = true, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 160, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Hero_Jim_Raynor_Marine}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val C_10_Canister_Rifle : FWeaponType = FWeaponType(source = WeaponType.C_10_Canister_Rifle, name = "C_10_Canister_Rifle", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 10, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Terran_Infantry_Weapons}, damageCooldown = 22, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Concussive, explosionType = ExplosionType.Normal, targetsAir = true, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 224, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Terran_Ghost}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val C_10_Canister_Rifle_Sarah_Kerrigan : FWeaponType = FWeaponType(source = WeaponType.C_10_Canister_Rifle_Sarah_Kerrigan, name = "C_10_Canister_Rifle_Sarah_Kerrigan", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 30, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Terran_Infantry_Weapons}, damageCooldown = 22, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Concussive, explosionType = ExplosionType.Normal, targetsAir = true, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 192, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Hero_Sarah_Kerrigan}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val C_10_Canister_Rifle_Samir_Duran : FWeaponType = FWeaponType(source = WeaponType.C_10_Canister_Rifle_Samir_Duran, name = "C_10_Canister_Rifle_Samir_Duran", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 25, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Terran_Infantry_Weapons}, damageCooldown = 22, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Concussive, explosionType = ExplosionType.Normal, targetsAir = true, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 192, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Hero_Samir_Duran}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val C_10_Canister_Rifle_Infested_Duran : FWeaponType = FWeaponType(source = WeaponType.C_10_Canister_Rifle_Infested_Duran, name = "C_10_Canister_Rifle_Infested_Duran", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 25, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Terran_Infantry_Weapons}, damageCooldown = 22, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Concussive, explosionType = ExplosionType.Normal, targetsAir = true, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 192, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Hero_Infested_Duran}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val C_10_Canister_Rifle_Alexei_Stukov : FWeaponType = FWeaponType(source = WeaponType.C_10_Canister_Rifle_Alexei_Stukov, name = "C_10_Canister_Rifle_Alexei_Stukov", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 30, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Terran_Infantry_Weapons}, damageCooldown = 22, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Concussive, explosionType = ExplosionType.Normal, targetsAir = true, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 192, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Hero_Alexei_Stukov}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Fragmentation_Grenade : FWeaponType = FWeaponType(source = WeaponType.Fragmentation_Grenade, name = "Fragmentation_Grenade", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 20, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Terran_Vehicle_Weapons}, damageCooldown = 30, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Concussive, explosionType = ExplosionType.Normal, targetsAir = false, damageBonus = 2, targetsTerrain = false, targetsGround = true, maxRange = 160, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Terran_Vulture}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Fragmentation_Grenade_Jim_Raynor : FWeaponType = FWeaponType(source = WeaponType.Fragmentation_Grenade_Jim_Raynor, name = "Fragmentation_Grenade_Jim_Raynor", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 30, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Terran_Vehicle_Weapons}, damageCooldown = 22, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Concussive, explosionType = ExplosionType.Normal, targetsAir = false, damageBonus = 2, targetsTerrain = false, targetsGround = true, maxRange = 160, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Hero_Jim_Raynor_Vulture}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Spider_Mines : FWeaponType = FWeaponType(source = WeaponType.Spider_Mines, name = "Spider_Mines", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 125, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Upgrade_60}, damageCooldown = 22, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Explosive, explosionType = ExplosionType.Radial_Splash, targetsAir = false, damageBonus = 0, targetsTerrain = false, targetsGround = true, maxRange = 10, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.Spider_Mines}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Terran_Vulture_Spider_Mine}, minRange = 0, medianSplashRadius = 75, targetsMechanical = false, outerSplashRadius = 100, innerSplashRadius = 50, targetsNonBuilding = true, targetsNonRobotic = false)
      val Twin_Autocannons : FWeaponType = FWeaponType(source = WeaponType.Twin_Autocannons, name = "Twin_Autocannons", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 12, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Terran_Vehicle_Weapons}, damageCooldown = 22, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = false, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 192, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Terran_Goliath}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Twin_Autocannons_Alan_Schezar : FWeaponType = FWeaponType(source = WeaponType.Twin_Autocannons_Alan_Schezar, name = "Twin_Autocannons_Alan_Schezar", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 24, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Terran_Vehicle_Weapons}, damageCooldown = 22, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = false, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 160, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Hero_Alan_Schezar}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Hellfire_Missile_Pack : FWeaponType = FWeaponType(source = WeaponType.Hellfire_Missile_Pack, name = "Hellfire_Missile_Pack", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 10, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Terran_Vehicle_Weapons}, damageCooldown = 22, targetsOrganic = false, damageFactor = 2, damageType = DamageType.Explosive, explosionType = ExplosionType.Normal, targetsAir = true, damageBonus = 2, targetsTerrain = false, targetsGround = false, maxRange = 160, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Terran_Goliath}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Hellfire_Missile_Pack_Alan_Schezar : FWeaponType = FWeaponType(source = WeaponType.Hellfire_Missile_Pack_Alan_Schezar, name = "Hellfire_Missile_Pack_Alan_Schezar", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 20, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Terran_Vehicle_Weapons}, damageCooldown = 22, targetsOrganic = false, damageFactor = 2, damageType = DamageType.Explosive, explosionType = ExplosionType.Normal, targetsAir = true, damageBonus = 1, targetsTerrain = false, targetsGround = false, maxRange = 160, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Hero_Alan_Schezar}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Arclite_Cannon : FWeaponType = FWeaponType(source = WeaponType.Arclite_Cannon, name = "Arclite_Cannon", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 30, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Terran_Vehicle_Weapons}, damageCooldown = 37, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Explosive, explosionType = ExplosionType.Normal, targetsAir = false, damageBonus = 3, targetsTerrain = false, targetsGround = true, maxRange = 224, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Terran_Siege_Tank_Tank_Mode}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Arclite_Cannon_Edmund_Duke : FWeaponType = FWeaponType(source = WeaponType.Arclite_Cannon_Edmund_Duke, name = "Arclite_Cannon_Edmund_Duke", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 70, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Terran_Vehicle_Weapons}, damageCooldown = 37, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Explosive, explosionType = ExplosionType.Normal, targetsAir = false, damageBonus = 3, targetsTerrain = false, targetsGround = true, maxRange = 224, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Hero_Edmund_Duke_Tank_Mode}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Fusion_Cutter : FWeaponType = FWeaponType(source = WeaponType.Fusion_Cutter, name = "Fusion_Cutter", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 5, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Upgrade_60}, damageCooldown = 15, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = false, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 10, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Terran_SCV}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Gemini_Missiles : FWeaponType = FWeaponType(source = WeaponType.Gemini_Missiles, name = "Gemini_Missiles", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 20, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Terran_Ship_Weapons}, damageCooldown = 22, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Explosive, explosionType = ExplosionType.Normal, targetsAir = true, damageBonus = 2, targetsTerrain = false, targetsGround = false, maxRange = 160, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Terran_Wraith}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Gemini_Missiles_Tom_Kazansky : FWeaponType = FWeaponType(source = WeaponType.Gemini_Missiles_Tom_Kazansky, name = "Gemini_Missiles_Tom_Kazansky", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 40, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Terran_Ship_Weapons}, damageCooldown = 22, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Explosive, explosionType = ExplosionType.Normal, targetsAir = true, damageBonus = 2, targetsTerrain = false, targetsGround = false, maxRange = 160, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Hero_Tom_Kazansky}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Burst_Lasers : FWeaponType = FWeaponType(source = WeaponType.Burst_Lasers, name = "Burst_Lasers", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 8, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Terran_Ship_Weapons}, damageCooldown = 30, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = false, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 160, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Terran_Wraith}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Burst_Lasers_Tom_Kazansky : FWeaponType = FWeaponType(source = WeaponType.Burst_Lasers_Tom_Kazansky, name = "Burst_Lasers_Tom_Kazansky", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 16, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Terran_Ship_Weapons}, damageCooldown = 30, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = false, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 160, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Hero_Tom_Kazansky}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val ATS_Laser_Battery : FWeaponType = FWeaponType(source = WeaponType.ATS_Laser_Battery, name = "ATS_Laser_Battery", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 25, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Terran_Ship_Weapons}, damageCooldown = 30, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = false, damageBonus = 3, targetsTerrain = false, targetsGround = true, maxRange = 192, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Terran_Battlecruiser}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val ATS_Laser_Battery_Hero : FWeaponType = FWeaponType(source = WeaponType.ATS_Laser_Battery_Hero, name = "ATS_Laser_Battery_Hero", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 50, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Terran_Ship_Weapons}, damageCooldown = 30, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = false, damageBonus = 3, targetsTerrain = false, targetsGround = true, maxRange = 192, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Hero_Norad_II}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val ATS_Laser_Battery_Hyperion : FWeaponType = FWeaponType(source = WeaponType.ATS_Laser_Battery_Hyperion, name = "ATS_Laser_Battery_Hyperion", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 30, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Terran_Ship_Weapons}, damageCooldown = 22, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = false, damageBonus = 3, targetsTerrain = false, targetsGround = true, maxRange = 192, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Hero_Hyperion}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val ATA_Laser_Battery : FWeaponType = FWeaponType(source = WeaponType.ATA_Laser_Battery, name = "ATA_Laser_Battery", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 25, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Terran_Ship_Weapons}, damageCooldown = 30, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = true, damageBonus = 3, targetsTerrain = false, targetsGround = false, maxRange = 192, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Terran_Battlecruiser}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val ATA_Laser_Battery_Hero : FWeaponType = FWeaponType(source = WeaponType.ATA_Laser_Battery_Hero, name = "ATA_Laser_Battery_Hero", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 50, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Terran_Ship_Weapons}, damageCooldown = 30, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = true, damageBonus = 3, targetsTerrain = false, targetsGround = false, maxRange = 192, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Hero_Norad_II}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val ATA_Laser_Battery_Hyperion : FWeaponType = FWeaponType(source = WeaponType.ATA_Laser_Battery_Hyperion, name = "ATA_Laser_Battery_Hyperion", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 30, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Terran_Ship_Weapons}, damageCooldown = 22, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = true, damageBonus = 3, targetsTerrain = false, targetsGround = false, maxRange = 192, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Hero_Hyperion}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Flame_Thrower : FWeaponType = FWeaponType(source = WeaponType.Flame_Thrower, name = "Flame_Thrower", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 8, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Terran_Infantry_Weapons}, damageCooldown = 22, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Concussive, explosionType = ExplosionType.Enemy_Splash, targetsAir = false, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 32, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Terran_Firebat}, minRange = 0, medianSplashRadius = 20, targetsMechanical = false, outerSplashRadius = 25, innerSplashRadius = 15, targetsNonBuilding = false, targetsNonRobotic = false)
      val Flame_Thrower_Gui_Montag : FWeaponType = FWeaponType(source = WeaponType.Flame_Thrower_Gui_Montag, name = "Flame_Thrower_Gui_Montag", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 16, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Terran_Infantry_Weapons}, damageCooldown = 22, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Concussive, explosionType = ExplosionType.Enemy_Splash, targetsAir = false, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 32, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Hero_Gui_Montag}, minRange = 0, medianSplashRadius = 20, targetsMechanical = false, outerSplashRadius = 25, innerSplashRadius = 15, targetsNonBuilding = false, targetsNonRobotic = false)
      val Arclite_Shock_Cannon : FWeaponType = FWeaponType(source = WeaponType.Arclite_Shock_Cannon, name = "Arclite_Shock_Cannon", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 70, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Terran_Vehicle_Weapons}, damageCooldown = 75, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Explosive, explosionType = ExplosionType.Radial_Splash, targetsAir = false, damageBonus = 5, targetsTerrain = false, targetsGround = true, maxRange = 384, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Terran_Siege_Tank_Siege_Mode}, minRange = 64, medianSplashRadius = 25, targetsMechanical = false, outerSplashRadius = 40, innerSplashRadius = 10, targetsNonBuilding = false, targetsNonRobotic = false)
      val Arclite_Shock_Cannon_Edmund_Duke : FWeaponType = FWeaponType(source = WeaponType.Arclite_Shock_Cannon_Edmund_Duke, name = "Arclite_Shock_Cannon_Edmund_Duke", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 150, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Terran_Vehicle_Weapons}, damageCooldown = 75, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Explosive, explosionType = ExplosionType.Radial_Splash, targetsAir = false, damageBonus = 5, targetsTerrain = false, targetsGround = true, maxRange = 384, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Hero_Edmund_Duke_Siege_Mode}, minRange = 64, medianSplashRadius = 25, targetsMechanical = false, outerSplashRadius = 40, innerSplashRadius = 10, targetsNonBuilding = false, targetsNonRobotic = false)
      val Longbolt_Missile : FWeaponType = FWeaponType(source = WeaponType.Longbolt_Missile, name = "Longbolt_Missile", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 20, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Upgrade_60}, damageCooldown = 15, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Explosive, explosionType = ExplosionType.Normal, targetsAir = true, damageBonus = 0, targetsTerrain = false, targetsGround = false, maxRange = 224, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Terran_Missile_Turret}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Claws : FWeaponType = FWeaponType(source = WeaponType.Claws, name = "Claws", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 5, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Zerg_Melee_Attacks}, damageCooldown = 8, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = false, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 15, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Zerg_Zergling}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Claws_Devouring_One : FWeaponType = FWeaponType(source = WeaponType.Claws_Devouring_One, name = "Claws_Devouring_One", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 10, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Zerg_Melee_Attacks}, damageCooldown = 8, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = false, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 15, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Hero_Devouring_One}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Claws_Infested_Kerrigan : FWeaponType = FWeaponType(source = WeaponType.Claws_Infested_Kerrigan, name = "Claws_Infested_Kerrigan", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 50, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Zerg_Melee_Attacks}, damageCooldown = 15, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = false, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 15, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Hero_Infested_Kerrigan}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Needle_Spines : FWeaponType = FWeaponType(source = WeaponType.Needle_Spines, name = "Needle_Spines", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 10, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Zerg_Missile_Attacks}, damageCooldown = 15, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Explosive, explosionType = ExplosionType.Normal, targetsAir = true, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 128, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Zerg_Hydralisk}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Needle_Spines_Hunter_Killer : FWeaponType = FWeaponType(source = WeaponType.Needle_Spines_Hunter_Killer, name = "Needle_Spines_Hunter_Killer", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 20, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Zerg_Missile_Attacks}, damageCooldown = 15, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Explosive, explosionType = ExplosionType.Normal, targetsAir = true, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 160, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Hero_Hunter_Killer}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Kaiser_Blades : FWeaponType = FWeaponType(source = WeaponType.Kaiser_Blades, name = "Kaiser_Blades", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 20, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Zerg_Melee_Attacks}, damageCooldown = 15, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = false, damageBonus = 3, targetsTerrain = false, targetsGround = true, maxRange = 25, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Zerg_Ultralisk}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Kaiser_Blades_Torrasque : FWeaponType = FWeaponType(source = WeaponType.Kaiser_Blades_Torrasque, name = "Kaiser_Blades_Torrasque", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 50, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Zerg_Melee_Attacks}, damageCooldown = 15, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = false, damageBonus = 3, targetsTerrain = false, targetsGround = true, maxRange = 25, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Hero_Torrasque}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Toxic_Spores : FWeaponType = FWeaponType(source = WeaponType.Toxic_Spores, name = "Toxic_Spores", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 4, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Zerg_Melee_Attacks}, damageCooldown = 15, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = false, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 2, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Zerg_Broodling}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Spines : FWeaponType = FWeaponType(source = WeaponType.Spines, name = "Spines", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 5, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Upgrade_60}, damageCooldown = 22, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = false, damageBonus = 0, targetsTerrain = false, targetsGround = true, maxRange = 32, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Zerg_Drone}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Acid_Spore : FWeaponType = FWeaponType(source = WeaponType.Acid_Spore, name = "Acid_Spore", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 20, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Zerg_Flyer_Attacks}, damageCooldown = 30, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = false, damageBonus = 2, targetsTerrain = false, targetsGround = true, maxRange = 256, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Zerg_Guardian}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Acid_Spore_Kukulza : FWeaponType = FWeaponType(source = WeaponType.Acid_Spore_Kukulza, name = "Acid_Spore_Kukulza", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 40, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Zerg_Flyer_Attacks}, damageCooldown = 30, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = false, damageBonus = 2, targetsTerrain = false, targetsGround = true, maxRange = 256, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Hero_Kukulza_Guardian}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Glave_Wurm : FWeaponType = FWeaponType(source = WeaponType.Glave_Wurm, name = "Glave_Wurm", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 9, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Zerg_Flyer_Attacks}, damageCooldown = 30, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = true, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 96, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Zerg_Mutalisk}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Glave_Wurm_Kukulza : FWeaponType = FWeaponType(source = WeaponType.Glave_Wurm_Kukulza, name = "Glave_Wurm_Kukulza", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 18, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Zerg_Flyer_Attacks}, damageCooldown = 30, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = true, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 96, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Hero_Kukulza_Mutalisk}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Seeker_Spores : FWeaponType = FWeaponType(source = WeaponType.Seeker_Spores, name = "Seeker_Spores", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 15, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Upgrade_60}, damageCooldown = 15, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = true, damageBonus = 0, targetsTerrain = false, targetsGround = false, maxRange = 224, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Zerg_Spore_Colony}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Subterranean_Tentacle : FWeaponType = FWeaponType(source = WeaponType.Subterranean_Tentacle, name = "Subterranean_Tentacle", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 40, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Upgrade_60}, damageCooldown = 32, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Explosive, explosionType = ExplosionType.Normal, targetsAir = false, damageBonus = 0, targetsTerrain = false, targetsGround = true, maxRange = 224, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Zerg_Sunken_Colony}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Suicide_Infested_Terran : FWeaponType = FWeaponType(source = WeaponType.Suicide_Infested_Terran, name = "Suicide_Infested_Terran", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 500, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Upgrade_60}, damageCooldown = 1, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Explosive, explosionType = ExplosionType.Radial_Splash, targetsAir = false, damageBonus = 0, targetsTerrain = false, targetsGround = true, maxRange = 3, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Zerg_Infested_Terran}, minRange = 0, medianSplashRadius = 40, targetsMechanical = false, outerSplashRadius = 60, innerSplashRadius = 20, targetsNonBuilding = false, targetsNonRobotic = false)
      val Suicide_Scourge : FWeaponType = FWeaponType(source = WeaponType.Suicide_Scourge, name = "Suicide_Scourge", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 110, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Upgrade_60}, damageCooldown = 1, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = true, damageBonus = 0, targetsTerrain = false, targetsGround = false, maxRange = 3, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Zerg_Scourge}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Particle_Beam : FWeaponType = FWeaponType(source = WeaponType.Particle_Beam, name = "Particle_Beam", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 5, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Upgrade_60}, damageCooldown = 22, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = false, damageBonus = 0, targetsTerrain = false, targetsGround = true, maxRange = 32, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Protoss_Probe}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Psi_Blades : FWeaponType = FWeaponType(source = WeaponType.Psi_Blades, name = "Psi_Blades", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 8, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Protoss_Ground_Weapons}, damageCooldown = 22, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = false, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 15, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Protoss_Zealot}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Psi_Blades_Fenix : FWeaponType = FWeaponType(source = WeaponType.Psi_Blades_Fenix, name = "Psi_Blades_Fenix", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 20, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Protoss_Ground_Weapons}, damageCooldown = 22, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = false, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 15, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Hero_Fenix_Zealot}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Phase_Disruptor : FWeaponType = FWeaponType(source = WeaponType.Phase_Disruptor, name = "Phase_Disruptor", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 20, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Protoss_Ground_Weapons}, damageCooldown = 30, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Explosive, explosionType = ExplosionType.Normal, targetsAir = true, damageBonus = 2, targetsTerrain = false, targetsGround = true, maxRange = 128, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Protoss_Dragoon}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Phase_Disruptor_Fenix : FWeaponType = FWeaponType(source = WeaponType.Phase_Disruptor_Fenix, name = "Phase_Disruptor_Fenix", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 45, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Protoss_Ground_Weapons}, damageCooldown = 22, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Explosive, explosionType = ExplosionType.Normal, targetsAir = true, damageBonus = 2, targetsTerrain = false, targetsGround = true, maxRange = 128, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Hero_Fenix_Dragoon}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Psi_Assault : FWeaponType = FWeaponType(source = WeaponType.Psi_Assault, name = "Psi_Assault", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 20, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Protoss_Ground_Weapons}, damageCooldown = 22, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = false, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 96, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Hero_Tassadar}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Psionic_Shockwave : FWeaponType = FWeaponType(source = WeaponType.Psionic_Shockwave, name = "Psionic_Shockwave", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 30, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Protoss_Ground_Weapons}, damageCooldown = 20, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Enemy_Splash, targetsAir = true, damageBonus = 3, targetsTerrain = false, targetsGround = true, maxRange = 64, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Protoss_Archon}, minRange = 0, medianSplashRadius = 15, targetsMechanical = false, outerSplashRadius = 30, innerSplashRadius = 3, targetsNonBuilding = false, targetsNonRobotic = false)
      val Psionic_Shockwave_TZ_Archon : FWeaponType = FWeaponType(source = WeaponType.Psionic_Shockwave_TZ_Archon, name = "Psionic_Shockwave_TZ_Archon", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 60, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Protoss_Ground_Weapons}, damageCooldown = 20, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Enemy_Splash, targetsAir = true, damageBonus = 3, targetsTerrain = false, targetsGround = true, maxRange = 64, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Hero_Tassadar_Zeratul_Archon}, minRange = 0, medianSplashRadius = 15, targetsMechanical = false, outerSplashRadius = 30, innerSplashRadius = 3, targetsNonBuilding = false, targetsNonRobotic = false)
      val Dual_Photon_Blasters : FWeaponType = FWeaponType(source = WeaponType.Dual_Photon_Blasters, name = "Dual_Photon_Blasters", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 8, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Protoss_Air_Weapons}, damageCooldown = 30, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = false, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 128, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Protoss_Scout}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Dual_Photon_Blasters_Mojo : FWeaponType = FWeaponType(source = WeaponType.Dual_Photon_Blasters_Mojo, name = "Dual_Photon_Blasters_Mojo", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 20, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Protoss_Air_Weapons}, damageCooldown = 30, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = false, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 128, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Hero_Mojo}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Dual_Photon_Blasters_Artanis : FWeaponType = FWeaponType(source = WeaponType.Dual_Photon_Blasters_Artanis, name = "Dual_Photon_Blasters_Artanis", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 20, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Protoss_Air_Weapons}, damageCooldown = 30, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = false, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 128, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Hero_Artanis}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Anti_Matter_Missiles : FWeaponType = FWeaponType(source = WeaponType.Anti_Matter_Missiles, name = "Anti_Matter_Missiles", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 14, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Protoss_Air_Weapons}, damageCooldown = 22, targetsOrganic = false, damageFactor = 2, damageType = DamageType.Explosive, explosionType = ExplosionType.Normal, targetsAir = true, damageBonus = 1, targetsTerrain = false, targetsGround = false, maxRange = 128, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Protoss_Scout}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Anti_Matter_Missiles_Mojo : FWeaponType = FWeaponType(source = WeaponType.Anti_Matter_Missiles_Mojo, name = "Anti_Matter_Missiles_Mojo", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 28, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Protoss_Air_Weapons}, damageCooldown = 22, targetsOrganic = false, damageFactor = 2, damageType = DamageType.Explosive, explosionType = ExplosionType.Normal, targetsAir = true, damageBonus = 1, targetsTerrain = false, targetsGround = false, maxRange = 128, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Hero_Mojo}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Anti_Matter_Missiles_Artanis : FWeaponType = FWeaponType(source = WeaponType.Anti_Matter_Missiles_Artanis, name = "Anti_Matter_Missiles_Artanis", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 28, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Protoss_Air_Weapons}, damageCooldown = 22, targetsOrganic = false, damageFactor = 2, damageType = DamageType.Explosive, explosionType = ExplosionType.Normal, targetsAir = true, damageBonus = 1, targetsTerrain = false, targetsGround = false, maxRange = 128, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Hero_Artanis}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Phase_Disruptor_Cannon : FWeaponType = FWeaponType(source = WeaponType.Phase_Disruptor_Cannon, name = "Phase_Disruptor_Cannon", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 10, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Protoss_Air_Weapons}, damageCooldown = 45, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Explosive, explosionType = ExplosionType.Normal, targetsAir = true, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 160, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Protoss_Arbiter}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Phase_Disruptor_Cannon_Danimoth : FWeaponType = FWeaponType(source = WeaponType.Phase_Disruptor_Cannon_Danimoth, name = "Phase_Disruptor_Cannon_Danimoth", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 20, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Protoss_Air_Weapons}, damageCooldown = 45, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Explosive, explosionType = ExplosionType.Normal, targetsAir = true, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 160, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Hero_Danimoth}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Pulse_Cannon : FWeaponType = FWeaponType(source = WeaponType.Pulse_Cannon, name = "Pulse_Cannon", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 6, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Protoss_Air_Weapons}, damageCooldown = 1, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = true, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 128, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Protoss_Interceptor}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val STS_Photon_Cannon : FWeaponType = FWeaponType(source = WeaponType.STS_Photon_Cannon, name = "STS_Photon_Cannon", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 20, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Upgrade_60}, damageCooldown = 22, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = false, damageBonus = 0, targetsTerrain = false, targetsGround = true, maxRange = 224, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Protoss_Photon_Cannon}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val STA_Photon_Cannon : FWeaponType = FWeaponType(source = WeaponType.STA_Photon_Cannon, name = "STA_Photon_Cannon", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 20, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Upgrade_60}, damageCooldown = 22, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = true, damageBonus = 0, targetsTerrain = false, targetsGround = false, maxRange = 224, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Protoss_Photon_Cannon}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Scarab : FWeaponType = FWeaponType(source = WeaponType.Scarab, name = "Scarab", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 100, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Scarab_Damage}, damageCooldown = 1, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Enemy_Splash, targetsAir = false, damageBonus = 25, targetsTerrain = false, targetsGround = true, maxRange = 128, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Protoss_Scarab}, minRange = 0, medianSplashRadius = 40, targetsMechanical = false, outerSplashRadius = 60, innerSplashRadius = 20, targetsNonBuilding = false, targetsNonRobotic = false)
      val Neutron_Flare : FWeaponType = FWeaponType(source = WeaponType.Neutron_Flare, name = "Neutron_Flare", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 5, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Protoss_Air_Weapons}, damageCooldown = 8, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Explosive, explosionType = ExplosionType.Air_Splash, targetsAir = true, damageBonus = 1, targetsTerrain = false, targetsGround = false, maxRange = 160, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Protoss_Corsair}, minRange = 0, medianSplashRadius = 50, targetsMechanical = false, outerSplashRadius = 100, innerSplashRadius = 5, targetsNonBuilding = false, targetsNonRobotic = false)
      val Halo_Rockets : FWeaponType = FWeaponType(source = WeaponType.Halo_Rockets, name = "Halo_Rockets", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 6, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Terran_Ship_Weapons}, damageCooldown = 64, targetsOrganic = false, damageFactor = 2, damageType = DamageType.Explosive, explosionType = ExplosionType.Air_Splash, targetsAir = true, damageBonus = 1, targetsTerrain = false, targetsGround = false, maxRange = 192, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Terran_Valkyrie}, minRange = 0, medianSplashRadius = 50, targetsMechanical = false, outerSplashRadius = 100, innerSplashRadius = 5, targetsNonBuilding = false, targetsNonRobotic = false)
      val Corrosive_Acid : FWeaponType = FWeaponType(source = WeaponType.Corrosive_Acid, name = "Corrosive_Acid", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 25, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Zerg_Flyer_Attacks}, damageCooldown = 100, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Explosive, explosionType = ExplosionType.Corrosive_Acid, targetsAir = true, damageBonus = 2, targetsTerrain = false, targetsGround = false, maxRange = 192, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Zerg_Devourer}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Subterranean_Spines : FWeaponType = FWeaponType(source = WeaponType.Subterranean_Spines, name = "Subterranean_Spines", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 20, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Zerg_Missile_Attacks}, damageCooldown = 37, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Enemy_Splash, targetsAir = false, damageBonus = 2, targetsTerrain = false, targetsGround = true, maxRange = 192, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Zerg_Lurker}, minRange = 0, medianSplashRadius = 20, targetsMechanical = false, outerSplashRadius = 20, innerSplashRadius = 20, targetsNonBuilding = false, targetsNonRobotic = false)
      val Warp_Blades : FWeaponType = FWeaponType(source = WeaponType.Warp_Blades, name = "Warp_Blades", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 40, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Protoss_Ground_Weapons}, damageCooldown = 30, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = false, damageBonus = 3, targetsTerrain = false, targetsGround = true, maxRange = 15, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Protoss_Dark_Templar}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Warp_Blades_Hero : FWeaponType = FWeaponType(source = WeaponType.Warp_Blades_Hero, name = "Warp_Blades_Hero", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 45, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Protoss_Ground_Weapons}, damageCooldown = 30, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = false, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 15, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Hero_Dark_Templar}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Warp_Blades_Zeratul : FWeaponType = FWeaponType(source = WeaponType.Warp_Blades_Zeratul, name = "Warp_Blades_Zeratul", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 100, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Protoss_Ground_Weapons}, damageCooldown = 22, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = false, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 15, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Hero_Zeratul}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Independant_Laser_Battery : FWeaponType = FWeaponType(source = WeaponType.Independant_Laser_Battery, name = "Independant_Laser_Battery", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 7, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Upgrade_60}, damageCooldown = 22, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = true, damageBonus = 1, targetsTerrain = false, targetsGround = false, maxRange = 128, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Special_Independant_Starport}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Twin_Autocannons_Floor_Trap : FWeaponType = FWeaponType(source = WeaponType.Twin_Autocannons_Floor_Trap, name = "Twin_Autocannons_Floor_Trap", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 10, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Terran_Vehicle_Weapons}, damageCooldown = 22, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Normal, targetsAir = false, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 160, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Special_Floor_Gun_Trap}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Hellfire_Missile_Pack_Wall_Trap : FWeaponType = FWeaponType(source = WeaponType.Hellfire_Missile_Pack_Wall_Trap, name = "Hellfire_Missile_Pack_Wall_Trap", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 10, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Terran_Vehicle_Weapons}, damageCooldown = 22, targetsOrganic = false, damageFactor = 2, damageType = DamageType.Explosive, explosionType = ExplosionType.Normal, targetsAir = false, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 160, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Special_Wall_Missile_Trap}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Flame_Thrower_Wall_Trap : FWeaponType = FWeaponType(source = WeaponType.Flame_Thrower_Wall_Trap, name = "Flame_Thrower_Wall_Trap", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 8, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Terran_Infantry_Weapons}, damageCooldown = 22, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Concussive, explosionType = ExplosionType.Enemy_Splash, targetsAir = false, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 64, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Special_Wall_Flame_Trap}, minRange = 0, medianSplashRadius = 20, targetsMechanical = false, outerSplashRadius = 25, innerSplashRadius = 15, targetsNonBuilding = false, targetsNonRobotic = false)
      val Hellfire_Missile_Pack_Floor_Trap : FWeaponType = FWeaponType(source = WeaponType.Hellfire_Missile_Pack_Floor_Trap, name = "Hellfire_Missile_Pack_Floor_Trap", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 10, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Terran_Vehicle_Weapons}, damageCooldown = 22, targetsOrganic = false, damageFactor = 2, damageType = DamageType.Explosive, explosionType = ExplosionType.Normal, targetsAir = false, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 160, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Special_Floor_Missile_Trap}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Yamato_Gun : FWeaponType = FWeaponType(source = WeaponType.Yamato_Gun, name = "Yamato_Gun", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 260, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Upgrade_60}, damageCooldown = 15, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Explosive, explosionType = ExplosionType.Yamato_Gun, targetsAir = true, damageBonus = 0, targetsTerrain = false, targetsGround = true, maxRange = 320, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.Yamato_Gun}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Terran_Battlecruiser}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Nuclear_Strike : FWeaponType = FWeaponType(source = WeaponType.Nuclear_Strike, name = "Nuclear_Strike", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 600, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Upgrade_60}, damageCooldown = 1, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Explosive, explosionType = ExplosionType.Nuclear_Missile, targetsAir = true, damageBonus = 0, targetsTerrain = false, targetsGround = true, maxRange = 3, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.Nuclear_Strike}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Terran_Ghost}, minRange = 0, medianSplashRadius = 192, targetsMechanical = false, outerSplashRadius = 256, innerSplashRadius = 128, targetsNonBuilding = false, targetsNonRobotic = false)
      val Lockdown : FWeaponType = FWeaponType(source = WeaponType.Lockdown, name = "Lockdown", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 0, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Upgrade_60}, damageCooldown = 1, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Concussive, explosionType = ExplosionType.Lockdown, targetsAir = true, damageBonus = 0, targetsTerrain = false, targetsGround = true, maxRange = 256, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.Lockdown}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Terran_Ghost}, minRange = 0, medianSplashRadius = 0, targetsMechanical = true, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = true, targetsNonRobotic = false)
      val EMP_Shockwave : FWeaponType = FWeaponType(source = WeaponType.EMP_Shockwave, name = "EMP_Shockwave", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 0, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Upgrade_60}, damageCooldown = 1, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Concussive, explosionType = ExplosionType.EMP_Shockwave, targetsAir = true, damageBonus = 0, targetsTerrain = true, targetsGround = true, maxRange = 256, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.EMP_Shockwave}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Terran_Science_Vessel}, minRange = 0, medianSplashRadius = 64, targetsMechanical = false, outerSplashRadius = 64, innerSplashRadius = 64, targetsNonBuilding = false, targetsNonRobotic = false)
      val Irradiate : FWeaponType = FWeaponType(source = WeaponType.Irradiate, name = "Irradiate", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 250, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Upgrade_60}, damageCooldown = 75, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Ignore_Armor, explosionType = ExplosionType.Irradiate, targetsAir = true, damageBonus = 0, targetsTerrain = true, targetsGround = true, maxRange = 288, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.Irradiate}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Terran_Science_Vessel}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Parasite : FWeaponType = FWeaponType(source = WeaponType.Parasite, name = "Parasite", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 0, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Upgrade_60}, damageCooldown = 1, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Independent, explosionType = ExplosionType.Parasite, targetsAir = true, damageBonus = 0, targetsTerrain = false, targetsGround = true, maxRange = 384, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.Parasite}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Zerg_Queen}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = true, targetsNonRobotic = false)
      val Spawn_Broodlings : FWeaponType = FWeaponType(source = WeaponType.Spawn_Broodlings, name = "Spawn_Broodlings", targetsOwn = false, targetsOrgOrMech = true, damageAmount = 0, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Upgrade_60}, damageCooldown = 1, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Independent, explosionType = ExplosionType.Broodlings, targetsAir = false, damageBonus = 0, targetsTerrain = false, targetsGround = true, maxRange = 288, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.Spawn_Broodlings}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Zerg_Queen}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = true, targetsNonRobotic = true)
      val Ensnare : FWeaponType = FWeaponType(source = WeaponType.Ensnare, name = "Ensnare", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 0, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Upgrade_60}, damageCooldown = 1, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Independent, explosionType = ExplosionType.Ensnare, targetsAir = true, damageBonus = 0, targetsTerrain = true, targetsGround = true, maxRange = 288, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.Ensnare}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Zerg_Queen}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Dark_Swarm : FWeaponType = FWeaponType(source = WeaponType.Dark_Swarm, name = "Dark_Swarm", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 0, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Upgrade_60}, damageCooldown = 1, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Independent, explosionType = ExplosionType.Dark_Swarm, targetsAir = true, damageBonus = 0, targetsTerrain = false, targetsGround = true, maxRange = 288, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.Dark_Swarm}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Zerg_Defiler}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Plague : FWeaponType = FWeaponType(source = WeaponType.Plague, name = "Plague", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 300, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Upgrade_60}, damageCooldown = 1, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Independent, explosionType = ExplosionType.Plague, targetsAir = true, damageBonus = 0, targetsTerrain = true, targetsGround = true, maxRange = 288, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.Plague}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Zerg_Defiler}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Consume : FWeaponType = FWeaponType(source = WeaponType.Consume, name = "Consume", targetsOwn = true, targetsOrgOrMech = false, damageAmount = 0, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Upgrade_60}, damageCooldown = 1, targetsOrganic = true, damageFactor = 1, damageType = DamageType.Independent, explosionType = ExplosionType.Consume, targetsAir = true, damageBonus = 0, targetsTerrain = false, targetsGround = true, maxRange = 16, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.Consume}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Zerg_Defiler}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = true, targetsNonRobotic = false)
      val Stasis_Field : FWeaponType = FWeaponType(source = WeaponType.Stasis_Field, name = "Stasis_Field", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 0, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Upgrade_60}, damageCooldown = 1, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Independent, explosionType = ExplosionType.Stasis_Field, targetsAir = true, damageBonus = 1, targetsTerrain = true, targetsGround = true, maxRange = 288, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.Stasis_Field}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Protoss_Arbiter}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Psionic_Storm : FWeaponType = FWeaponType(source = WeaponType.Psionic_Storm, name = "Psionic_Storm", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 14, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Upgrade_60}, damageCooldown = 45, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Ignore_Armor, explosionType = ExplosionType.Radial_Splash, targetsAir = true, damageBonus = 1, targetsTerrain = true, targetsGround = true, maxRange = 288, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.Psionic_Storm}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Protoss_High_Templar}, minRange = 0, medianSplashRadius = 48, targetsMechanical = false, outerSplashRadius = 48, innerSplashRadius = 48, targetsNonBuilding = true, targetsNonRobotic = false)
      val Disruption_Web : FWeaponType = FWeaponType(source = WeaponType.Disruption_Web, name = "Disruption_Web", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 0, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Upgrade_60}, damageCooldown = 22, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Ignore_Armor, explosionType = ExplosionType.Disruption_Web, targetsAir = false, damageBonus = 0, targetsTerrain = false, targetsGround = true, maxRange = 288, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.Disruption_Web}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Protoss_Corsair}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Restoration : FWeaponType = FWeaponType(source = WeaponType.Restoration, name = "Restoration", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 20, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Upgrade_60}, damageCooldown = 22, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Ignore_Armor, explosionType = ExplosionType.Restoration, targetsAir = true, damageBonus = 0, targetsTerrain = true, targetsGround = true, maxRange = 192, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.Restoration}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Terran_Medic}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Mind_Control : FWeaponType = FWeaponType(source = WeaponType.Mind_Control, name = "Mind_Control", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 8, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Upgrade_60}, damageCooldown = 22, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Normal, explosionType = ExplosionType.Mind_Control, targetsAir = true, damageBonus = 1, targetsTerrain = true, targetsGround = true, maxRange = 256, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.Mind_Control}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Protoss_Dark_Archon}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Feedback : FWeaponType = FWeaponType(source = WeaponType.Feedback, name = "Feedback", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 8, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Upgrade_60}, damageCooldown = 22, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Ignore_Armor, explosionType = ExplosionType.Feedback, targetsAir = true, damageBonus = 1, targetsTerrain = true, targetsGround = true, maxRange = 320, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.Feedback}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Protoss_Dark_Archon}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Optical_Flare : FWeaponType = FWeaponType(source = WeaponType.Optical_Flare, name = "Optical_Flare", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 8, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Upgrade_60}, damageCooldown = 22, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Independent, explosionType = ExplosionType.Optical_Flare, targetsAir = false, damageBonus = 1, targetsTerrain = false, targetsGround = true, maxRange = 288, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.Optical_Flare}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Terran_Medic}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Maelstrom : FWeaponType = FWeaponType(source = WeaponType.Maelstrom, name = "Maelstrom", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 0, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Upgrade_60}, damageCooldown = 1, targetsOrganic = false, damageFactor = 1, damageType = DamageType.Independent, explosionType = ExplosionType.Maelstrom, targetsAir = true, damageBonus = 1, targetsTerrain = true, targetsGround = true, maxRange = 320, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.Maelstrom}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Protoss_Dark_Archon}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val None : FWeaponType = FWeaponType(source = WeaponType.None, name = "None", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 0, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.None}, damageCooldown = 0, targetsOrganic = false, damageFactor = 0, damageType = DamageType.None, explosionType = ExplosionType.None, targetsAir = false, damageBonus = 0, targetsTerrain = false, targetsGround = false, maxRange = 0, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.None}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
      val Unknown : FWeaponType = FWeaponType(source = WeaponType.Unknown, name = "Unknown", targetsOwn = false, targetsOrgOrMech = false, damageAmount = 0, l_upgradeType = lazy(LazyThreadSafetyMode.NONE) {FUpgradeType.Unknown}, damageCooldown = 0, targetsOrganic = false, damageFactor = 0, damageType = DamageType.Unknown, explosionType = ExplosionType.Unknown, targetsAir = false, damageBonus = 0, targetsTerrain = false, targetsGround = false, maxRange = 0, l_getTech = lazy(LazyThreadSafetyMode.NONE) {FTechType.None}, l_whatUses = lazy(LazyThreadSafetyMode.NONE) {FUnitType.Unknown}, minRange = 0, medianSplashRadius = 0, targetsMechanical = false, outerSplashRadius = 0, innerSplashRadius = 0, targetsNonBuilding = false, targetsNonRobotic = false)
   }
}
